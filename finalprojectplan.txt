SI 206 W17
Put your name here:
Sara Ramaswamy

----

Which option for the final project are you choosing -- 1, 2, or 3? 2

IF YOU ARE CHOOSING OPTION 3, answer the following questions:

* Write 1-3 sentences summarizing what the goal of your project is:


* What are your two data sources? Provide links to documentation or websites you will be getting data from.


* Why are you proposing this project?


* What will the output of this project be? What will it look like, and what information will it contain?


* What are your concerns about this proposal?


-----

THE FOLLOWING QUESTIONS ARE FOR EVERYONE. (Though they may be easier if you are choosing Option 1 or 2, because you can reference the Option 1 or 2 instructions.)

* What will at least one of the classes you're going to define be called?
Movie



* What will that class take as input to its constructor?
1) a dictionary representing a movie


* What will 1 instance of this class represent?
1) Represents a movie


* What are 3 instance variables this class will have? What will they be called, and what information will they hold? Why are they important?
self.movie_title: holds the movie title text data, and it’s important, because this will link the tables together.
self.movie_director: this will contain text data referring to the director. It will allow me to pass a director name to my Tweet class, to create a list of Tweet instances. 
self.movie_imdb_rating:this will contain a float referring to the movie rating and is important again for finding things like highest ranked movie, or sorting according to ranking. 


* Explain 2 methods the class will have that are not the class constructor (__init__ method) by answering the following questions for each. 


ONE METHOD: num_languages
- What will the name of the method be?
num_languages

- What will the method do?
This will count the number of languages listed under the Movie’s json response object dictionary, using a for loop. 


- Will it take any additional input? 
No.


- Will it return anything? Should it change anything about the instance/an instance variable? 
It will return the number of languages found in the list, associated with the “Language” key.


- Why is it useful for this class definition, in this program?
It is useful, because it will allow me to place this integer directly into a database table and potentially rank movies by number of languages present; if someone is looking to watch a movie with more movies to gain language exposure, this would be particularly helpful. 


ANOTHER METHOD: get_director_data
- What will the name of the method be?
get_director_data

- What will the method do?
This function will take a dictionary of data representing a movie and creates a class Tweet instance with the self.movie_director as the search term, which is the search term I’ve decided to use in my project. 

- Will it take any additional input? 
No.

- Will it return anything? Should it change anything about the instance/an instance variable? 
It will return a class Tweet instance, which contains a list of dictionaries representing the tweet data from the search term. 


- Why is it useful for this class definition, in this program?
It is useful, because it will allow me to collect a list of the tweets associated with each of the directors’ name, and then I can easily concatenate those lists. 

* What will the tables in your database be?
Tweets
Users
Movies


* What fields will each database table have? Which field of them is the primary key? You should list the fields for each database table here, e.g.
Tweets:
- tweet_id (primary key) STRING
- tweet_text  TEXT
- tweet_poster (user who posted the tweet) TEXT
- movie_title (the movie search the tweet came from, represented by its title) TEXT
- num_favorites INTEGER
- num_retweets INTEGER 

Users
- user_id (primary key) STRING
- screen_name STRING
- num_user_favorites INTEGER
- description TEXT


Movies
- movie_id (primary key)
- movie_title TEXT 
- director TEXT
- num_languages INTEGER
- rating FLOAT
- top_actor TEXT
- genre TEXT (will try to find this info for the table)


* List, in English, 2 queries you'll want to make from your database. At least one should be a JOIN. You can always change these later, but start with  ideas you're interested in and lessen the work on yourself later on! 
(e.g. from class examples, maybe "I want to make a query that accesses the numbers of times each user has favorited tweets, and the number of times tweets that user posted have been favorited -- so I'll be 
joining the Tweets table and the Users table")

Query 1: I will want to make a query that accesses information about movie titles that are mentioned in the tweets, and the movie titles list, so I’ll be joining the Movies and Tweets table. 

Query 2: I will want to make a query that accesses information about the people who posted the tweets, so I will want to join the Tweets and Users table. 


* What are at least 2 of the data processing mechanics you're planning to use? 

I will need to create a list of genres of the movies I find and then use a Counter from the collections library to determine the most common genre of movie among the list. 

I will need to use list comprehension to create a list called users from TweetUser instances, since I will have a TweetUser class. 

I will need to use list comprehension to create a list called user_tweets from Tweet instances, since I will have a Tweet class. 

I will need to use list comprehension to create a list called movie_list from Movie instances, since I will have a Movie class. 

I will want to find the most common words used within certain genres of data, so I will use a Counter within the collection libraries for this.


* Why will each of those be useful to you? What data might you use it on? 
(e.g. "Set comprehension: I think I'm going to be looking for unique names and proper nouns in this big set of text, so I'm going to use a set comprehension"). 
>>>This is especially important if you are doing Option 3, but it's important for everyone!<<<

I will need a counter to efficiently determine the frequency of genres that appear in my large data result. I can also use it to find other frequencies; for example, I could find the most common words among the movies within the Romance genre, if there are multiple movies in this category. I think this would be interesting to compare with the frequency of words in tweets that mention a movie falling within the Comedy genre. 

I will need to use several list comprehensions, so I can manipulate them more efficiently and deal with class instances that will be type tuple. I want to do this, so I can access the elements in each of the class instance variables easily with dot operators.



* What will your output look like? Will it be a .txt file? a CSV file? something else? What information will it contain? >>>This is especially important if you are doing Option 3, but it's important for everyone!<<<

My output file will be a .txt file. It will contain various results of querying my databases, using join statements for intersections. I am hoping to reveal interesting patterns in this way. The document will be well-organized. 
For example, I will be able to print the 3 movie titles that were part of the search, accompanied by a summary of various twitter data associated with the movie title. 

